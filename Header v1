#include <iostream> 
#include <vector>
#include <climits> 
using namespace std;

struct Edge{
    char type; // g(gate), s(source), or d(drain)
    Mos *mPoint;
    int volt ; // on(1) off(0) or not set yet(2)
    Edge(int v, char t);
}

struct Mos{
    Edge edges[3];
    int tType; // Nmos(0) or Pmos(1) output(2)
    Mos(int type);
}



class gate{
    public:
        gate(int type);
        void setInputs(int in1, int in2);
        int getOutput();
    private:
        vector<Edge> input1;
        vector<Edge> input2;
        vector<Mos> transistors;
        outPut O;
        int type; // AND, NAND, OR, NOR, XOR, NOT

        // Gate helper functions
        void createAND();
        void createNAND();
        void createOR();
        void createNOR();
        void createXOR();
        //createNOT(wer); possible add later (only has one input)

        // Create helper functions
        void addMos(bool t);
        void addEdge(char t);
        void addOutput();

        // getOutput helper functions 
        void DFS_helper();
        void setEdge(int v);
        
        
}

Edge::Edge(int v, char t){
    volt = v;
    type = t;
    mPoint = NULL;
    oPoint = NULL;
}

Mos::Mos(int type){
    tType = type;
    edges[0] = Edge(2, 's'); //source
    edges[1] = Edge(2, 'g'); //gate
    edges[2] = Edge(2, 'd'); //drain
} 

gate::gate(int type){
    switch (type){
        case 0;
            createAND();
        case 1;
            createNAND();
        case 2; 
            createNOR();
        case 3;
            createOR();
        case 4; 
            createXOR();
    }
}

void gate::setInputs(int in1, int in2);
int gate::getOutput();

void gate::addMos(bool t){
    newMos = Mos(t);
    transistors.push_back(newMos);
}

void gate::addEdge(char t, Mos *from, Mos *point, outPut *pointOut){
    newEdge = Edge(2, t);
    if (point == NULL || pointOut == NULL){
        if (point != NULL){
            newEdge.mPoint = point;
            addEdge()
        }else {
            newEdge.oPoint = pointOut;
        }
    }
}
void gate::addOutput();
